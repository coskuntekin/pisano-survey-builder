import React from "react";
import { NavLink } from "react-router-dom";

interface HeaderProps {
  user: { name: string } | null;
  logout: () => void;
  isLoading: boolean;
}

const Header: React.FC<HeaderProps> = ({ user, logout, isLoading }) => {
  return (
    <header className="flex items-center justify-between px-6 py-4 border-b border-gray-200 bg-white shadow-sm sticky top-0 z-10">
      <div className="flex items-center gap-8 h-full">
        <div className="flex gap-x-2 items-end h-full">
          <svg
            width="110"
            height="32"
            viewBox="0 0 105 28"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M95.8554 8.9165C97.096 8.9165 98.3011 9.16632 99.3998 9.63027C100.499 10.1299 101.491 10.808 102.306 11.6288C103.121 12.4854 103.795 13.4846 104.291 14.591C104.752 15.733 105 16.9464 105 18.2312C105 19.516 104.752 20.7294 104.291 21.8357C103.795 22.9778 103.121 23.9771 102.306 24.7979C101.491 25.6544 100.499 26.3325 99.3998 26.7964C98.3011 27.2961 97.096 27.5459 95.8554 27.5459C94.5794 27.5459 93.3743 27.2961 92.2756 26.7964C91.1768 26.3325 90.1844 25.6544 89.3692 24.7979C88.554 23.9771 87.8805 22.9778 87.4197 21.8357C86.9235 20.7294 86.6754 19.516 86.6754 18.2312C86.6754 16.9464 86.9235 15.733 87.4197 14.591C87.8805 13.4846 88.554 12.4854 89.3692 11.6288C90.1844 10.808 91.1768 10.1299 92.2756 9.63027C93.3743 9.16632 94.5794 8.9165 95.8554 8.9165ZM95.8554 23.2276C96.458 23.2276 96.9896 23.1205 97.5213 22.8707C98.0175 22.6209 98.4783 22.2997 98.8682 21.8714C99.2581 21.4789 99.5416 20.9792 99.7897 20.3725C100.002 19.8015 100.109 19.1591 100.109 18.4453C100.109 17.7316 100.002 17.0535 99.7897 16.4468C99.5416 15.8401 99.2581 15.2691 98.8682 14.8051C98.4783 14.3412 98.0175 13.9843 97.5213 13.6988C96.9896 13.4489 96.458 13.3062 95.8554 13.3062C95.2529 13.3062 94.7212 13.4489 94.1896 13.6988C93.6579 13.9843 93.2326 14.3412 92.8427 14.8051C92.4528 15.2691 92.1338 15.8401 91.9211 16.4468C91.673 17.0535 91.5667 17.7316 91.5667 18.4453C91.5667 19.1591 91.673 19.8015 91.9211 20.3725C92.1338 20.9792 92.4528 21.4789 92.8427 21.8714C93.2326 22.2997 93.6579 22.6209 94.1896 22.8707C94.7212 23.1205 95.2529 23.2276 95.8554 23.2276Z"
              fill="#0A2B50"
            ></path>
            <path
              d="M29.666 27.5464H24.4833V8.79036H29.666V27.5464ZM27.0747 6.21897C26.286 6.21897 25.61 5.95427 25.0467 5.38705C24.4833 4.81983 24.2205 4.13917 24.2205 3.34507C24.2205 2.55096 24.4833 1.83249 25.0467 1.26527C25.61 0.735866 26.286 0.43335 27.0747 0.43335C27.8634 0.43335 28.5394 0.735866 29.1027 1.26527C29.666 1.83249 29.9289 2.55096 29.9289 3.34507C29.9289 4.13917 29.666 4.81983 29.1027 5.38705C28.5394 5.95427 27.8634 6.21897 27.0747 6.21897Z"
              fill="#0A2B50"
            ></path>
            <path
              d="M43.8608 17.7142C45.2503 18.6974 45.9263 20.0965 45.9263 21.9116C45.9263 22.7435 45.7386 23.5376 45.363 24.2561C44.9499 24.9746 44.4241 25.6174 43.7481 26.1846C43.0721 26.7518 42.2835 27.1678 41.3821 27.4703C40.4808 27.8107 39.5043 27.9619 38.4903 27.9619C37.7017 27.9619 36.9506 27.8485 36.237 27.6594C35.4859 27.4703 34.8099 27.1678 34.1714 26.8275C33.533 26.4871 33.0072 26.0334 32.5566 25.5418C32.0683 25.0502 31.7303 24.5208 31.505 23.9158C32.0683 23.6511 32.7068 23.3107 33.4203 22.9704C34.1339 22.6301 34.7348 22.3275 35.2606 22.0628C35.4859 22.441 35.8239 22.7813 36.3121 23.0838C36.8003 23.4242 37.4388 23.5754 38.265 23.5754C39.1288 23.5754 39.7297 23.3864 40.1428 22.9704C40.5559 22.5544 40.7437 22.1763 40.7437 21.836C40.7437 21.5713 40.5935 21.3444 40.3306 21.1175C40.0677 20.9284 39.7297 20.7393 39.3917 20.6259C38.9035 20.4368 38.4903 20.3234 38.1523 20.2856C37.8143 20.2856 37.4388 20.2099 37.0257 20.0965C35.6737 19.7562 34.6597 19.3402 33.9461 18.773C33.2326 18.2436 32.7068 17.7142 32.3688 17.147C32.0308 16.5797 31.8806 16.0503 31.843 15.5588C31.8054 15.0672 31.7679 14.6512 31.7679 14.3487C31.7679 13.5546 31.9557 12.7605 32.2937 12.042C32.6317 11.3235 33.1199 10.6807 33.7583 10.1135C34.3592 9.58406 35.0728 9.1681 35.899 8.82777C36.6877 8.48744 37.5515 8.33618 38.4903 8.33618C39.279 8.33618 39.9926 8.44963 40.7061 8.67651C41.4197 8.9034 42.0581 9.20592 42.6215 9.62188C43.1848 10.0378 43.7106 10.4916 44.1237 11.0588C44.5368 11.626 44.8372 12.2311 45.025 12.9117L41.0066 14.2731C40.8563 13.8193 40.5559 13.4411 40.1052 13.1764C39.617 12.9117 39.1288 12.7605 38.603 12.7605C38.0772 12.7605 37.6641 12.9496 37.3261 13.2899C36.9881 13.6302 36.8379 14.0084 36.8379 14.3487C36.8379 14.7646 36.9881 15.105 37.3261 15.3319C37.6266 15.5966 37.9646 15.7478 38.3401 15.8613C38.603 15.8991 38.9035 15.9369 39.1663 15.9747C39.4292 16.0125 39.6546 16.0882 39.9175 16.126C40.7812 16.315 41.5699 16.5419 42.2083 16.8066C42.8468 17.0713 43.3726 17.3738 43.8608 17.7142Z"
              fill="#0A2B50"
            ></path>
            <path
              d="M66.6563 8.79014V27.5461H62.1872L61.6614 25.542C60.9479 26.5251 60.0841 27.168 59.0701 27.5083C58.0561 27.8486 56.967 27.9999 55.8779 27.9999C54.5634 27.9999 53.3241 27.7352 52.235 27.2058C51.1083 26.7142 50.1319 25.9957 49.3057 25.0882C48.4794 24.2184 47.841 23.1596 47.3903 21.9496C46.9021 20.7773 46.6768 19.4916 46.6768 18.1303C46.6768 16.769 46.9021 15.4833 47.3903 14.2732C47.841 13.101 48.4794 12.0422 49.3057 11.1346C50.1319 10.2649 51.1083 9.54643 52.235 9.01703C53.3241 8.52544 54.5634 8.26074 55.8779 8.26074C57.0797 8.26074 58.1688 8.44981 59.1828 8.82796C60.1968 9.2061 61.023 9.81114 61.6614 10.6431L62.1872 8.79014H66.6563ZM61.4737 18.2059C61.4737 17.2228 61.361 16.3909 61.0981 15.7102C60.8352 15.0673 60.4597 14.5001 60.0466 14.0842C59.5959 13.6682 59.0701 13.3657 58.5068 13.1766C57.9059 12.9876 57.2674 12.9119 56.5914 12.9119C55.9154 12.9119 55.277 13.0632 54.7137 13.3279C54.1128 13.5926 53.587 13.9707 53.1363 14.4245C52.6857 14.9161 52.3477 15.4455 52.0848 16.0883C51.8219 16.7312 51.7092 17.4118 51.7092 18.1303C51.7092 18.8488 51.8219 19.5295 52.0848 20.1723C52.3477 20.8151 52.6857 21.3445 53.1363 21.7983C53.587 22.2899 54.1128 22.6681 54.7137 22.9328C55.277 23.1975 55.9154 23.3487 56.5914 23.3487C57.9434 23.3487 59.1077 22.9328 60.0466 22.063C60.9854 21.2311 61.4361 19.9454 61.4737 18.2059Z"
              fill="#0A2B50"
            ></path>
            <path
              d="M78.1885 8.79053C78.9021 8.79053 79.6532 8.90397 80.517 9.09304C81.3808 9.28212 82.1694 9.66026 82.9206 10.2275C83.6717 10.7947 84.3101 11.551 84.8359 12.5342C85.3241 13.5173 85.587 14.803 85.587 16.3534V27.5465H80.3668V16.5425C80.3668 15.9753 80.2917 15.4837 80.1039 15.0677C79.9161 14.6518 79.6532 14.3493 79.3528 14.0846C79.0148 13.8577 78.6768 13.6686 78.2637 13.5552C77.8505 13.4417 77.475 13.4039 77.0619 13.4039C76.7239 13.4039 76.3859 13.4417 76.0103 13.5552C75.5972 13.6686 75.2592 13.8577 74.9212 14.1224C74.5832 14.3871 74.2828 14.6896 74.0574 15.1056C73.8321 15.5215 73.7194 15.9753 73.7194 16.5425V27.5465H68.5367V8.79053H72.9683L73.7194 10.2275C74.3203 9.81152 74.9963 9.47119 75.7474 9.16867C76.4985 8.90397 77.3248 8.79053 78.1885 8.79053Z"
              fill="#0A2B50"
            ></path>
            <path
              fillRule="evenodd"
              clipRule="evenodd"
              d="M4.06011 0L6.5584 8.72752L3.90454 18.163H0L2.65387 8.72752L0.155571 0H4.06011Z"
              fill="#0D7BFF"
            ></path>
            <path
              d="M15.5188 0.751953C19.9161 0.751953 23.45 4.31112 23.45 8.6974C23.45 13.1251 19.9161 16.6833 15.5188 16.6833H12.231V27.4841H6.55933V16.6833L8.03865 11.5108H15.5597C16.2994 11.5108 16.9156 11.2211 17.4909 10.6832C18.0252 10.1452 18.2719 9.48362 18.2719 8.6974C18.2719 7.95256 18.0252 7.28999 17.4909 6.75205C16.9156 6.21411 16.2994 5.92445 15.5597 5.92445H8.08039L6.60026 0.751953H15.5188Z"
              fill="#0A2B50"
            ></path>
          </svg>
          <h1 className="text-lg font-semibold">Survey Builder</h1>
        </div>

        <nav className="flex gap-4">
          <NavLink
            to="/app/dashboard"
            end
            className={({ isActive }) =>
              [
                "px-3 py-2 rounded transition-colors",
                isActive
                  ? "bg-blue-600 text-white"
                  : "text-blue-700 hover:bg-blue-100",
              ].join(" ")
            }
          >
            Dashboard
          </NavLink>
          <NavLink
            to="/app/survey-builder/step-1"
            className={() => {
              const active =
                typeof window !== "undefined" &&
                window.location.pathname.startsWith("/app/survey-builder");
              return [
                "px-3 py-2 rounded transition-colors",
                active
                  ? "bg-blue-600 text-white"
                  : "text-blue-700 hover:bg-blue-100",
              ].join(" ");
            }}
          >
            Survey Builder
          </NavLink>
        </nav>
      </div>
      <div className="flex items-center gap-x-4">
        {user && <small className="font-medium">Welcome, {user.name}!</small>}
        <button
          type="button"
          onClick={logout}
          disabled={isLoading}
          className="px-4 py-2 cursor-pointer border border-blue-600 text-blue-600 rounded hover:bg-blue-50 transition-colors disabled:opacity-50"
        >
          {isLoading ? "Logging out..." : "Logout"}
        </button>
      </div>
    </header>
  );
};

export default Header;
